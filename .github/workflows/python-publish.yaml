name: Upload Python Package

on:
  push:
    branches:
      - main
    paths:
      - sdk/pyproject.toml

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - uses: Gr1N/setup-poetry@v8

      - name: Extract version
        id: version
        run: |
          VERSION=$(grep '^version' sdk/pyproject.toml | sed 's/version = "//;s/"//')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Copy Readme to SDK
        run: cp README.md sdk/

      - name: Build release distributions
        run: cd sdk && poetry build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: sdk/dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/p/eggai

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: sdk/dist/

      - name: Check if version already published
        id: check
        run: |
          PACKAGE="eggai"
          VERSION="${{ needs.release-build.outputs.version }}"
          STATUS=$(curl -sL https://pypi.org/pypi/$PACKAGE/$VERSION/json -o /dev/null -w '%{http_code}')
          if [ "$STATUS" = "200" ]; then
            echo "already_published=true" >> $GITHUB_OUTPUT
          else
            echo "already_published=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish release distributions to PyPI
        if: steps.check.outputs.already_published == 'false'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: sdk/dist/
