name: Python code validation and build

on:
  push:

jobs:
  # python-lint:
  #   runs-on: ubuntu-latest
  #   name: Lint python code

  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Run python linter
  #       uses: astral-sh/ruff-action@v3
  #       with:
  #         src: examples/multi_agent_human_chat

  integration:
    runs-on: gpu-runner-github-hosted
    name: Run integration tests
    permissions:
      contents: read
      packages: write
    # needs: python-lint
    env:
      CLAIMS_LANGUAGE_MODEL_API_BASE: http://eggai-examples-lmstudio-1:1234/v1/
      CLAIMS_LANGUAGE_MODEL: lm_studio/gemma-3-4b-it-qat
      LM_STUDIO_API_BASE: http://eggai-examples-lmstudio-1:1234/v1/
      LM_STUDIO_API_KEY: lm-studio
    steps:
      - run: docker info

      - uses: actions/checkout@v4

      - name: Start services with Docker Compose
        uses: hoverkraft-tech/compose-action@v2.2.0
        with:
          compose-file: examples/multi_agent_human_chat/docker-compose.yml

      - run: |
          docker ps -q | xargs -n1 docker inspect --format '{{.Name}} {{.HostConfig.Runtime}}'

      - name: Wait for Redpanda and MinIO to be healthy
        run: |
          echo "Waiting for Redpanda and MinIO to be healthy..."
          timeout 180 bash -c '
            until [ "$(docker inspect -f {{.State.Health.Status}} redpanda)" = "healthy" ] &&
                  [ "$(docker inspect -f {{.State.Health.Status}} eggai-examples-minio-1)" = "healthy" ]; do
              echo "Waiting..."
              sleep 5
            done
          '

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Set up test environment
        working-directory: examples/multi_agent_human_chat
        run: |
          make setup

      - name: Run integration tests
        working-directory: examples/multi_agent_human_chat
        run: |
          make test-frontend-agent
          make test-claims-agent

      - name: Dump logs on failure
        if: failure()
        run: docker compose logs


  # docker-build:
  #   runs-on: ubuntu-latest
  #   name: Build and push docker image
  #   permissions:
  #     contents: read
  #     packages: write
  #   needs: integration
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Github container registry login
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Generate image tag
  #       id: image_tag
  #       run: |
  #         today=$(date -d@$(git show -s --format=%ct ${{ github.sha }}) +%Y%m%d%H%M%S)
  #         shortSha=$(git rev-parse --short=8 ${{ github.sha }})
  #         echo "tag=${shortSha}-${today}" >> "$GITHUB_OUTPUT"

  #     - name: Build and push
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: examples/multi_agent_human_chat
  #         push: true
  #         platforms: linux/amd64
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         tags: ghcr.io/eggai-tech/multi_agent_human_chat:${{ steps.image_tag.outputs.tag }}
